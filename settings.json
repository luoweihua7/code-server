{
  "[css]": {
    "cSpell.fixSpellingWithRenameProvider": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.suggest.insertMode": "replace",
    "gitlens.codeLens.scopes": [
      "document"
    ]
  },
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": "off"
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-containers"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[less]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[svg]": {
    "editor.defaultFormatter": "jock.svg"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.autoIndent": "keep",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "gitlens.codeLens.scopes": [
      "document"
    ]
  },
  "[xml]": {
    "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "better-comments.highlightPlainText": true,
  "cSpell.diagnosticLevel": "Hint",
  "cSpell.spellCheckDelayMs": 250,
  "cSpell.userWords": [
    "tencent"
  ],
  "code-runner.clearPreviousOutput": true,
  "code-runner.executorMap": {
    "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "ahk": "autohotkey",
    "applescript": "osascript",
    "autoit": "autoit3",
    "bat": "cmd /c",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "clojure": "lein exec",
    "coffeescript": "coffee",
    "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "crystal": "crystal",
    "csharp": "scriptcs",
    "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    "dart": "dart",
    "erlang": "escript",
    "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fsharp": "fsi",
    "gleam": "gleam run -m $fileNameWithoutExt",
    "go": "go run",
    "groovy": "groovy",
    "haskell": "runghc",
    "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "javascript": "node",
    "julia": "julia",
    "kit": "kitc --run",
    "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    "lisp": "sbcl --script",
    "lua": "lua",
    "mojo": "mojo run",
    "nim": "nim compile --verbosity:0 --hints:off --run",
    "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "ocaml": "ocaml",
    "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    "perl": "perl",
    "perl6": "perl6",
    "php": "php",
    "pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
    "powershell": "powershell -ExecutionPolicy ByPass -File",
    "python": "python -u",
    "r": "Rscript",
    "racket": "racket",
    "ruby": "ruby",
    "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "sass": "sass --style expanded",
    "scala": "scala",
    "scheme": "csi -script",
    "scss": "scss --style expanded",
    "shellscript": "bash",
    "sml": "cd $dir && sml $fileName",
    "spwn": "spwn build",
    "swift": "swift",
    "typescript": "ts-node",
    "v": "v run",
    "vbscript": "cscript //Nologo",
    "zig": "zig run"
  },
  "debug.console.fontFamily": "FiraCode Nerd Font, JetBrainsMono Nerd Font, Menlo, Monaco, monospace, default",
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.useInlineViewWhenSpaceIsLimited": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "never"
  },
  "editor.codeLensFontFamily": "FiraCode Nerd Font, JetBrainsMono Nerd Font, Menlo, Monaco, monospace",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.detectIndentation": false,
  "editor.find.autoFindInSelection": "multiline",
  "editor.fontFamily": "FiraCode Nerd Font, JetBrainsMono Nerd Font, Menlo, Monaco, monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 13,
  "editor.fontWeight": "normal",
  "editor.formatOnPaste": false,
  "editor.formatOnType": false,
  "editor.guides.bracketPairs": true,
  "editor.guides.highlightActiveBracketPair": true,
  "editor.inlayHints.fontFamily": "FiraCode Nerd Font, JetBrainsMono Nerd Font, Menlo, Monaco, monospace",
  "editor.inlayHints.padding": true,
  "editor.inlineSuggest.enabled": true,
  "editor.language.colorizedBracketPairs": [],
  "editor.minimap.maxColumn": 120,
  "editor.minimap.renderCharacters": false,
  "editor.renderWhitespace": "all",
  "editor.scrollBeyondLastLine": true,
  "editor.selectionHighlight": true,
  "editor.tabSize": 2,
  "editor.unicodeHighlight.includeStrings": false,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.unicodeHighlight.nonBasicASCII": false,
  "editor.wordWrapColumn": 120,
  "eslint.codeActionsOnSave.mode": "problems",
  "eslint.enable": false,
  "eslint.quiet": true,
  "eslint.timeBudget.onValidation": {
    "error": 8000,
    "warn": 4000
  },
  "explorer.autoRevealExclude": {
    "**/node_modules": false
  },
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmPasteNative": false,
  "explorer.fileNesting.patterns": {
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.db": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.s3db": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.sqlite": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, renovate*, rollup.config.*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "readme.*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*, LICENSE",
    "shims.d.ts": "*.d.ts",
    "tsconfig.json": "tsconfig.*.json",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "explorer.openEditors.visible": 1,
  "extensions.ignoreRecommendations": true,
  "files.associations": {
    "*.js": "javascript",
    "*.ts": "typescript",
    "*.vue": "vue",
    "*.yaml": "yaml"
  },
  "files.eol": "\n",
  "git-graph.date.type": "Commit Date",
  "git-graph.dialog.fetchRemote.prune": true,
  "git-graph.dialog.fetchRemote.pruneTags": true,
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.ignoreLegacyWarning": true,
  "git.ignoreMissingGitWarning": true,
  "github.copilot.advanced": {},
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use conventional commit message format, choose the most appropriate commit type. **DO NOT** translate Common types of commit messages to Chinese."
    }
  ],
  "github.copilot.chat.localeOverride": "zh-CN",
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.enable": {
    "*": false
  },
  "gitlens.advanced.messages": {
    "suppressGitVersionWarning": true
  },
  "gitlens.ai.model": "vscode",
  "gitlens.ai.vscode.model": "copilot:gpt-4o",
  "gitlens.blame.avatars": false,
  "gitlens.blame.dateFormat": "YYYY/MM/DD HH:mm:ss",
  "gitlens.blame.format": "${date} - ${author|25}",
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.scopes": [
    "containers"
  ],
  "gitlens.currentLine.dateFormat": "YYYY/MM/DD hh:mm:ss",
  "gitlens.currentLine.format": "${date, }${author}${' via 'pullRequest}${ • message|150?}",
  "gitlens.currentLine.uncommittedChangesFormat": "${date, }${author}${' via 'pullRequest}${ • message|150?}",
  "gitlens.defaultDateFormat": "YYYY/MM/DD HH:mm:ss",
  "gitlens.defaultDateLocale": "zh-CN",
  "gitlens.defaultDateShortFormat": "YY/MM/DD HH:mm:ss",
  "gitlens.defaultTimeFormat": "HH:mm:ss",
  "gitlens.graph.sidebar.enabled": false,
  "gitlens.hovers.avatars": false,
  "gitlens.proxy": {},
  "gitlens.showWhatsNewAfterUpgrades": false,
  "gitlens.statusBar.enabled": false,
  "gitlens.views.branches.avatars": false,
  "gitlens.views.commits.avatars": false,
  "gitlens.views.fileHistory.avatars": false,
  "gitlens.views.formats.commits.description": "${author, }${committerDate}",
  "gitlens.views.remotes.avatars": false,
  "gitlens.views.repositories.avatars": false,
  "javascript.suggest.names": false,
  "javascript.updateImportsOnFileMove.enabled": "never",
  "markdown.extension.syntax.plainTheme": true,
  "material-icon-theme.folders.theme": "specific",
  "merge-conflict.autoNavigateNextConflict.enabled": true,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "prettier.enableDebugLogs": true,
  "prettier.printWidth": 120,
  "prettier.semi": true,
  "prettier.singleQuote": true,
  "rapidapi.terminalLink.enabled": false,
  "search.exclude": {
    "**/package-lock.json": true
  },
  "security.workspace.trust.enabled": false,
  "security.workspace.trust.untrustedFiles": "open",
  "settingsSync.ignoredExtensions": [],
  "settingsSync.ignoredSettings": [],
  "sortJSON.contextMenu": {
    "sortJSON": true,
    "sortJSONAlphaNum": false,
    "sortJSONAlphaNumReverse": false,
    "sortJSONKeyLength": false,
    "sortJSONKeyLengthReverse": false,
    "sortJSONReverse": false,
    "sortJSONType": false,
    "sortJSONTypeReverse": false,
    "sortJSONValues": false,
    "sortJSONValuesReverse": true
  },
  "sortJSON.excludedFiles": [
    "package.json"
  ],
  "svg.preview.background": "transparent",
  "svg.preview.mode": "svg",
  "telemetry.telemetryLevel": "off",
  "terminal.integrated.allowMnemonics": true,
  "terminal.integrated.automationProfile.windows": null,
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "block",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.fontFamily": "FiraCode Nerd Font, FiraMono Nerd Font, Hack Nerd Font Mono, Menlo, Monaco, monospace",
  "terminal.integrated.fontWeight": "500",
  "terminal.integrated.lineHeight": 1.2,
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.persistentSessionScrollback": 10000,
  "terminal.integrated.profiles.windows": {
    "Command Prompt": {
      "args": [],
      "icon": "terminal-cmd",
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ]
    },
    "Git Bash": {
      "source": "Git Bash"
    },
    "PowerShell": {
      "icon": "terminal-powershell",
      "source": "PowerShell"
    }
  },
  "terminal.integrated.rightClickBehavior": "default",
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.sendKeybindingsToShell": true,
  "terminal.integrated.shellIntegration.history": 500,
  "terminal.integrated.tabs.enabled": true,
  "typescript.reportStyleChecksAsWarnings": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "update.mode": "manual",
  "update.showReleaseNotes": false,
  "window.openFoldersInNewWindow": "on",
  "window.restoreWindows": "none",
  "window.title": "${activeEditorLong}${separator}${rootName}",
  "window.zoomLevel": 1,
  "workbench.colorCustomizations": {
    "editor.findMatchBackground": "#d52753dd",
    "editor.findMatchBorder": "#d52753dd",
    "editor.findMatchHighlightBackground": "#275fe4dd",
    "editor.inactiveSelectionBackground": "#275fe4dd",
    "editor.lineHighlightBackground": "#383a42",
    "editor.selectionHighlightBackground": "#275fe4dd",
    "editor.wordHighlightBackground": "#275fe4dd"
  },
  "workbench.colorTheme": "One Dark Pro",
  "workbench.commandPalette.history": 25,
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editorAssociations": {
    "*.plist": "default"
  },
  "workbench.enableExperiments": false,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.settings.enableNaturalLanguageSearch": false,
  "workbench.startupEditor": "none"
}