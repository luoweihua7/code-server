name: Release

on:
  repository_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          echo "REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)" >> $GITHUB_ENV
          echo "start_time=$(date +%s)" >> $GITHUB_ENV
          echo "DOCKER_TAG_VERSION=$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Download Nerd Fonts
        run: |
          mkdir -p /tmp/fonts
          INSTALL_FONTS=(FiraCode Hack JetBrainsMono)
          for i in ${INSTALL_FONTS[@]}; do
            echo "Downloading font ${i} ==> https://github.com/ryanoasis/nerd-fonts/releases/latest/download/${i}.tar.xz"
            wget -q https://github.com/ryanoasis/nerd-fonts/releases/latest/download/${i}.tar.xz
            echo "Extracting font ${i}.tar.xz"
            tar -xJf ${i}.tar.xz -C /tmp/fonts
            rm -rf /tmp/fonts/*Propo*.ttf
            rm -rf ${i}.tar.xz
          done
          rm -rf ./fonts
          mkdir -p ./fonts
          cp /tmp/fonts/*-*.ttf ./fonts

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}:latest,${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}:${{ env.DOCKER_TAG_VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}:buildcache,mode=max

      - name: Build time
        run: |
          start_time=$(echo ${{ env.start_time }})
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "Build time: $((duration / 60)) minutes and $((duration % 60)) seconds"
          if [ $duration -gt 60 ]; then
            echo "CODE_SERVER_UPDATED=true" >> $GITHUB_ENV
          else
            echo "CODE_SERVER_UPDATED=false" >> $GITHUB_ENV
          fi

      - name: Update Changelog
        if: env.CODE_SERVER_UPDATED == 'true'
        run: |
          echo "## Last Updated: $(date +'%Y-%m-%d')" > CHANGELOG.md
          echo "- ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases" >> CHANGELOG.md
          echo "- https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPOSITORY_NAME }}/tags" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@actions.github.com"
          git add CHANGELOG.md
          git commit --allow-empty -m "【$(date +'%Y-%m-%d')】Update changelog"
          git push
